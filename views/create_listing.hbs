<head>
    <link rel="stylesheet" href="/public/css/create_listing.css">
</head>

<form class="form-horizontal" action='/listing/submit-create' enctype="multipart/form-data" method="POST">    
    <div class='section'>
        
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Title</h1>
                        <h2 class="subtitle is-6">
                            Give your tour a nice name
                        </h2>
                    </section>
                </div>
                <div class='column is-half'>
                    <input name='theName' class="input is-primary" type="text" placeholder="Primary input">
                </div>
            </div>      
        </div>

        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Description</h1>
                        <h2 class="subtitle is-6">
                            Give a brief overview of your tour
                        </h2>
                    </section>
                </div>
                <div class='column is-half' style='margin-top: 50px;'>
                    <textarea name='theDesc' class="textarea is-primary" placeholder="e.g. Hello world"></textarea>
                </div>
            </div>      
        </div>

        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Duration</h1>
                        <h2 class="subtitle is-6">
                            How long will your Tour last?
                        </h2>
                    </section>
                </div>
                <div class='column is-1'>
                    <div class="select is-info">
                            <select id='tourDuration'>
                                <option></option>
                            </select>
                        </div>
                </div>

                <div class='column'>
                    Hours
                </div>
            </div>      
        </div>

        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Timings</h1>
                        <h2 class="subtitle is-6">
                            When your Tour will be conducted
                        </h2>
                    </section>
                </div>
                
                
                    <div class='column is-one-third' style='margin-top: 50px;'>
                        <div class="select is-info">
                            <select class='timeslots' id='tourTiming'>
                                <option>-</option>
                            </select>
                        </div>

                        <div class='tag-container' id='timeTags' style='margin-top: 20px;'>

                        </div>
                    </div>


            </div>      
        </div>


    </div>

    <div class='container'>
        <button class="button is-link is-right" type='submit'>Submit</button>
    </div>
    
   
</form>


<script>
    function initializeDuration() {
        console.log("Ran duration initialize function")

        var select = $('#tourDuration')
        // Reset the select options first
        select.html('<option></option>')
        // select.html("")

        for(var i = 1; i < 11.5; i+= 0.5) {
            select.append(`<option value=${i}>${i}</option>`)        
        }
        console.log("Done Duration initialize!")
    }

    // Takes number (minutes) and returns a string
    // Takes 420 and returns 7am
    function numToTime(i) {
        hours = Math.floor(i/60)
        minutes = i%60
        if (minutes == 0) {
            minutes = '0' + minutes
        }
        ampm = hours%24 < 12 ? "AM" : "PM"
        hours = hours % 12
        if (hours===0) {
            hours = 12
        }

        return `${hours}:${minutes} ${ampm}`
    }

    // Takes a date string and converts it to number
    function timeToNum(x) {
        hours = parseInt(x.split(':')[0])
        tmp = x.split(':')[1]
        min = parseInt(tmp.split(' ')[0])
        ampm = tmp.split(' ')[1]
        hours = hours%12
        if (ampm == 'PM') {
            hours += 12
        }
        
        num = (hours * 60) + min
        return num
    }

    // The string of all currently selected times
    var selectedTimeArray = []

    // Update the time ranges displayed, based on the duration and already selected items (selectedTimeArray)
    function updateTiming() {
        var duration = parseInt($("#tourDuration").val()) * 60
        // The array of current times selected already
        var arr = selectedTimeArray
        console.log(arr)
        var numArr = []

        // To get the list of nums of already selected time ranges
        arr.forEach((timeRange) =>{
            start = timeRange.split(' - ')[0]
            end = timeRange.split(' - ')[1]
            console.log(`${start} - ${end}`)
            startNum = timeToNum(start)
            endNum = timeToNum(end)
            for(i = startNum; i<= endNum; i+= 30) {
                numArr.push(i)
            }
        })

        $("#tourTiming").html("<option>-</option>")

            
        for(var i = 420; i < 1380 - duration; i+= 30) {
            if (numArr.includes(i) || numArr.includes(i+duration)) {
                continue
            }
            var start = numToTime(i)
            var end = numToTime(i + duration)
            // Append this to the output using jquery .append
            $("#tourTiming").append(`<option>${start} - ${end}</option>`)
        }
    }

    // Updates the internal array which contains the strings of all selected time ranges
    function updateTimeRangeArray() {
        var currentTime = $("#tourTiming").val()
        if (currentTime != '-') {
            selectedTimeArray.push(currentTime)
            console.log(selectedTimeArray)
        }   
    }

    // Removes a particular time range string from the internal array
    function removeTimeRange(val) {
        selectedTimeArray = selectedTimeArray.filter(e => e !== val)
    }

    function addTimeTag() {
        $("#timeTags").html("")
        selectedTimeArray.forEach((timeRange)=>{
            var elem = `<span class="tag is-primary is-medium">
                            ${timeRange} 
                            <i class="fas fa-trash-alt" onclick='this.parentElement.remove();removeTimeRange("${timeRange}");updateTiming()' style="margin-left: 20px;"></i>
                        </span>`
            $("#timeTags").append(elem)
        })
    }

    // If a new duration is selected, remove all tags
    function resetTimeTag() {
        $("#timeTags").html("")
    }

    // Ensures that the endTime rendered is later than the startTime
    // $("$startTime").on("change", )

    $(window).on( "load", ()=>{
        initializeDuration()
        $("#tourDuration").on('change', ()=>{
                // Reset the selectedTimeArray first, so it can contain the new duration ranges
                selectedTimeArray = []
                // Reset the timings to be displayed on the dropdown, following the new duration
                updateTiming()
                // Reset all the preselected time tags
                resetTimeTag()
            }
        )

        // Every time we click on a tour Timing, we want to add it to the internal array, as well as update the rendered time ranges. We also want to add the time range tag
        $("#tourTiming").on('change', ()=>{
            updateTimeRangeArray()
            updateTiming()
            addTimeTag()
        })
    })
</script>
