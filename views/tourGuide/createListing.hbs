<head>
    <!-- <link rel='stylesheet' href='/public/css/create_listing.css'> -->
    <link rel='stylesheet' href='/third_party/alex/create_listing.css'>
    <link rel="stylesheet" href="/third_party/jquery-ui/jquery-ui.min.css">
    <!-- <script src = "https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script> -->
    <script src='/third_party/jquery-ui/jquery-ui.js'></script>

    <script>
        // When the document is ready, initialize the sortable item
        $(document).ready(() => {
            $("#itineraryItems").sortable()
        })
    </script>
</head>

<!-- Convetion: Name will end with 's' and ID without -->
<!-- Tour Title -------- Name:tourTitle      ID: NIL -->
<!-- Tour Description -- Name:tourDesc       ID: NIL -->
<!-- Tour Duration ----- Name:tourDuration   ID: tourDuration -->
<!-- Tour Timings ------ Final Name:finalTimings    ID: tourTiming -->
<!-- Tour Days --------- Final Name:finalDays       ID: tourDay  -->
<!-- Tour Itinerary ---- Final Name:finalItinerary  ID: itineraryItems  -->


<!-- If validationErrors is defined and there are validationErrors -->
{{#if (isDefined validationErrors)}}
{{#if (haveErr validationErrors)}}
<div class='section'>
    <div class='columns'>
        <div class='column is-8 is-offset-2'>
            {{#each validationErrors}}
            <article class="message is-danger">
                <div class="message-header">
                    <p>{{this.renderedName}}</p>
                    <button class="delete" onclick="this.parentElement.parentElement.remove()"></button>
                </div>
                <div class="message-body">
                    {{this.msg}}
                </div>
            </article>
            {{/each}}
        </div>
    </div>
</div>
{{/if}}
{{/if}}

<form class="form-horizontal" enctype="multipart/form-data" method="POST"
    id='createListingForm'>
    <div class='section'>

        <!-- TOUR TITLE -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Title</h1>
                        <h2 class="subtitle is-6">
                            Give your tour a nice name
                        </h2>
                    </section>
                </div>
                <div class='column is-half'>
                    <input name='tourTitle' class="input is-primary" type="text" placeholder="Primary input">
                </div>
            </div>
        </div>

        <!-- TOUR DESCRIPTION -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Description</h1>
                        <h2 class="subtitle is-6">
                            Give a brief overview of your tour
                        </h2>
                    </section>
                </div>
                <div class='column is-half' style='margin-top: 50px;'>
                    <textarea name='tourDesc' class="textarea is-primary" placeholder="e.g. Hello world"></textarea>
                </div>
            </div>
        </div>

        <!-- TOUR DURATION -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Duration</h1>
                        <h2 class="subtitle is-6">
                            How long will your Tour last?
                        </h2>
                    </section>
                </div>
                <div class='column is-1'>
                    <div class="select is-info">
                        <select id='tourDuration' name='tourDuration'>
                            <option></option>
                        </select>
                    </div>
                </div>

                <div class='column'>
                    Hours
                </div>
            </div>
        </div>

        <!-- TOUR TIMINGS -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Timings</h1>
                        <h2 class="subtitle is-6">
                            When your Tour will be conducted
                        </h2>
                    </section>
                </div>


                <div class='column is-three-quarters' style='margin-top: 30px;'>
                    <div class="select is-info">
                        <select class='timeslots' id='tourTiming'>
                            <option>-</option>
                        </select>
                    </div>

                    <div class='tag-container' id='timeTags'>

                    </div>
                </div>
            </div>
        </div>

        <!-- AVAILABLE DAYS -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Available Days</h1>
                        <h2 class="subtitle is-6">
                            Tours are available on these days
                        </h2>
                    </section>
                </div>
                <div class='column is-half'>
                    <div class='select is-primary'>
                        <select id='tourDay'>
                            <option>-</option>
                        </select>
                    </div>

                    <div class='tag-container' id='dayTags'>

                    </div>


                </div>
            </div>
        </div>

        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Image</h1>
                        <h2 class="subtitle is-6">
                            Show some pictures about your tour
                        </h2>
                    </section>
                </div>

                <div class='column is-half'>
                    <div class="file has-name is-boxed">
                        <label class="file-label">

                            <input class="file-input" type="file" name="resume"
                                onchange="if (this.files.length > 0) document.getElementById('file-label').innerHTML = this.files[0].name;">

                            <span class="file-cta">
                                <span class="file-icon">
                                    <i class="fas fa-upload"></i>
                                </span>
                                <span class="file-label" id='file-label'>
                                    Upload a tour Image
                                </span>
                            </span>
                            <span class="file-name">
                            </span>
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <!-- TOUR ITINERARY -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Itinerary</h1>
                        <h2 class="subtitle is-6">
                            Provide a detailed outline of the Tour
                        </h2>
                    </section>
                </div>

                <div class='column is-5 itinerary'>
                    <div class='control has-icons-right is-clickable'>
                        <input class='input is-success' id='itinerary-str'>
                        <span class='icon is-right'>
                            <i class="fas fa-feather-alt" id='add-itinerary-icon'
                                style="margin-right: 20px; pointer-events: initial"></i>
                        </span>
                    </div>

                    <ul class='ui-sortable' id='itineraryItems'>
                    </ul>
                </div>
            </div>
        </div>


        <!-- TOUR LOCATION -->
        <div class='container'>
            <div class='columns is-variable is-5 is-vcentered'>
                <div class='column is-one-quarter' style="text-align:right;">
                    <section class="section">
                        <h1 class="title is-5">Tour Location</h1>
                        <h2 class="subtitle is-6">
                            Which places will your Tour cover?
                        </h2>
                    </section>
                </div>
                <div class='column is-half'>
                    <input id='tourLocs' class="input" type='text'></textarea>

                    <!-- Google map -->
                    <div id="map"></div>

                    <!-- Display geolocation data -->
                    <ul class="geo-data">
                        <li>Full Address: <span id="location"></span></li>
                        <li>Postal Code: <span id="postal_code"></span></li>
                        <li>Country: <span id="country"></span></li>
                        <li>Latitude: <span id="lat"></span></li>
                        <li>Longitude: <span id="lon"></span></li>
                    </ul>

                </div>
            </div>
        </div>


    </div>


    <!-- SUBMIT BUTTON -->
    <div class='container'>
        <button class="button is-link is-right" type='submit'>Submit</button>
    </div>

    <!-- These are the final inputs (arrays to string) you will receive -->
    <input name='finalTimings' hidden>
    <input name='finalDays' hidden>
    <input name='finalItinerary' hidden>



</form>



<script defer>

    // GLOBAL OBJECTS

    // The string of all currently selected times
    var selectedTimeArray = []

    // Days Array to initialize the Available Days
    var allDays = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
    var selectedDayArray = []

    // Stores all the itinerary strings
    var createdItinerary = []


    // HELPER FUNCTIONS

    // Returns the cookie value given its name
    function getCookieValue(name) {
        return document.cookie.split('; ').find(row => row.startsWith(name)).split('=')[1]
    }

    // Returns a boolean whether array is empty
    function isEmptyArray(arr) {
        return arr.filter((n) => n).length == 0
    }

    // Returns an array with trimmed elements and no empty elements
    function trimmedArray(arr) {
        // Remove all whitespaces front and back of each element
        arr = arr.map(x => x.trim())
        // Remove all empty elements
        arr = arr.filter(x => x)
        return arr
    }


    // INITIALIZER FUNCTIONS
    function initializeDuration() {
        console.log("Ran duration initialize function")

        var select = $('#tourDuration')
        // Reset the select options first
        select.html('<option></option>')
        // select.html("")

        for (var i = 1; i < 11.5; i += 0.5) {
            select.append(`<option value=${i}>${i}</option>`)
        }
        console.log("Done Duration initialize!")
    }

    // Takes number (minutes) and returns a string
    // Takes 420 and returns 7am
    function numToTime(i) {
        hours = Math.floor(i / 60)
        minutes = i % 60
        if (minutes == 0) {
            minutes = '0' + minutes
        }
        ampm = hours % 24 < 12 ? "AM" : "PM"
        hours = hours % 12
        if (hours === 0) {
            hours = 12
        }

        return `${hours}:${minutes} ${ampm}`
    }

    // Takes a date string and converts it to number
    function timeToNum(x) {
        hours = parseInt(x.split(':')[0])
        tmp = x.split(':')[1]
        min = parseInt(tmp.split(' ')[0])
        ampm = tmp.split(' ')[1]
        hours = hours % 12
        if (ampm == 'PM') {
            hours += 12
        }

        num = (hours * 60) + min
        return num
    }





    // DURATION + TIMING

    // Initializer
    // Update the time ranges displayed, based on the duration and already selected items (selectedTimeArray)
    function updateTiming() {
        var duration = parseFloat($("#tourDuration").val()) * 60
        // The array of current times selected already
        var arr = selectedTimeArray
        var numArr = []

        // To get the list of nums of already selected time ranges
        arr.forEach((timeRange) => {
            start = timeRange.split(' - ')[0]
            end = timeRange.split(' - ')[1]
            startNum = timeToNum(start)
            endNum = timeToNum(end)
            for (i = startNum; i <= endNum; i += 30) {
                numArr.push(i)
            }
        })

        $("#tourTiming").html("<option>-</option>")


        for (var i = 420; i < 1380 - duration; i += 30) {
            if (numArr.includes(i) || numArr.includes(i + duration)) {
                continue
            }
            var start = numToTime(i)
            var end = numToTime(i + duration)
            // Append this to the output using jquery .append
            $("#tourTiming").append(`<option>${start} - ${end}</option>`)
        }
    }

    // Updater
    // Updates the internal array which contains the strings of all selected time ranges
    function updateTimeRangeArray() {
        var currentTime = $("#tourTiming").val()
        if (currentTime != '-') {
            selectedTimeArray.push(currentTime)
        }
    }

    // If it has "Specific" means it adds using user-defined input (time)
    // Used to inject pre-existing values
    function updateSpecificTimeRangeArray(time) {
        if (time != '-') {
            selectedTimeArray.push(time)
        }
    }

    // Updater
    // Removes a particular time range string from the selectedTimeRange array
    function removeTimeRange(val) {
        selectedTimeArray = selectedTimeArray.filter(e => e !== val)
    }

    // initializer
    // Adds a time range tag when a time range is selected
    // On removing the tag, we will 
    // 1. Delete the entire parent element (Basically the tag)
    // 2. Delete the time range from the selectedTimeArray 
    // 3. Update the rendered time ranges (Which changes because the selectedTimeArray has changed)
    function addTimeTag() {
        $("#timeTags").html("")
        selectedTimeArray.forEach((timeRange) => {
            var elem = `<span class="tag is-primary is-medium" style="margin-left: 10px;">
                            ${timeRange} 
                            <i class="fas fa-trash-alt" onclick='this.parentElement.remove();removeTimeRange("${timeRange}");updateTiming()' style="margin-left: 20px;"></i>
                        </span>`
            $("#timeTags").append(elem)
        })
    }

    function addSpecificTimeTag(time) {
        var elem = `<span class="tag is-primary is-medium" style="margin-left: 10px;">
                        ${time} 
                        <i class="fas fa-trash-alt" onclick='this.parentElement.remove();removeTimeRange("${time}");updateTiming()' style="margin-left: 20px;"></i>
                    </span>`
        $("#timeTags").append(elem)
    }

    // Updater
    // If a new duration is selected, remove all tags
    function resetTimeTag() {
        $("#timeTags").html("")
    }








    // AVAILABLE DAYS
    // Updater + Initializer
    // Create/update the dropdown items for the Available Days item
    function initializeDays() {
        console.log('Day Initialized')
        selector = $("#tourDay")
        // Reset the array first
        selector.html("<option>-</option>")
        allDays.forEach((day) => {
            selector.append(`<option>${day}</option>`)
        })
    }

    // Update the rendered days
    function updateDays() {
        console.log('Day Initialized')
        selector = $("#tourDay")
        // Reset the array first
        selector.html("<option>-</option>")
        allDays.forEach((day) => {
            // If the day isn't selected yet, we render it
            if (!selectedDayArray.includes(day)) {
                selector.append(`<option>${day}</option>`)
            }

        })
    }

    // Array Updater
    // Will add the currently selected day to the SelectedDayArray()
    function updateSelectedDayArray() {
        currentDay = $("#tourDay").val()
        if (currentDay != '-') {
            selectedDayArray.push(currentDay)
        }
    }


    function updateSpecificSelectedDayArray(day) {
        if (day != '-') {
            selectedDayArray.push(day)
        }
    }

    // Array Updater
    // Removes a particular time range string from the selectedTimeRange array
    function removeDay(val) {
        selectedDayArray = selectedDayArray.filter(e => e !== val)
    }


    // Initializer
    function addDayTag() {
        $("#dayTags").html("")
        selectedDayArray.forEach((day) => {
            var elem = `<span class="tag is-primary is-medium" style="margin-left: 10px;">
                            ${day} 
                            <i class="fas fa-trash-alt" onclick='this.parentElement.remove();removeDay("${day}");updateDays()' style="margin-left: 20px;"></i>
                        </span>`
            $("#dayTags").append(elem)
        })
    }

    function addSpecificDayTag(day) {
        var elem = `<span class="tag is-primary is-medium" style="margin-left: 10px;">
                        ${day} 
                        <i class="fas fa-trash-alt" onclick='this.parentElement.remove();removeDay("${day}");updateDays()' style="margin-left: 20px;"></i>
                    </span>`
        $("#dayTags").append(elem)
    }








    // TOUR ITINERARY
    // Updater + Initializer


    // ITINERARY LIST

    // Add new itinerary list item when feather is clicked
    function addItineraryItem() {
        // Get the current text value
        var item = $("#itinerary-str").val()
        // Reset input box to empty
        $("#itinerary-str").val("")
        var elem = `<li class="itinerary-item" contenteditable="true">
                        ${item}
                        <i class="fas fa-trash-alt itinerary-item-icon" onclick="this.parentElement.remove()"></i>
                    </li>`
        $("#itineraryItems").append(elem)

        // Sortable + Editable for Itinerary list
        // Must call this everytime I add an itinerary item so that this onclick trigger applies to them too
        // When I double-click, I can edit the string inside (But I cannot sort it)
        $(".itinerary-item").on('dblclick', () => {
            $("#itineraryItems").sortable({ cancel: ':input,button,[contenteditable="true"]' })
        })

        // When I click away, I can no longer edit the string, but I can now sort it
        $(".itinerary-item").on('focusout', () => {
            $("#itineraryItems").sortable({ cancel: "" })
        })
    }

    // Inject specific itineray string to the list
    function addSpecificItineraryItem(itinerary) {
        // Get the current text value
        var item = itinerary
        // Reset input box to empty
        $("#itinerary-str").val("")
        var elem = `<li class="itinerary-item" contenteditable="true">
                        ${item}
                        <i class="fas fa-trash-alt itinerary-item-icon" onclick="this.parentElement.remove()"></i>
                    </li>`
        $("#itineraryItems").append(elem)

        // Sortable + Editable for Itinerary list
        // Must call this everytime I add an itinerary item so that this onclick trigger applies to them too
        // When I double-click, I can edit the string inside (But I cannot sort it)
        $(".itinerary-item").on('dblclick', () => {
            $("#itineraryItems").sortable({ cancel: ':input,button,[contenteditable="true"]' })
        })

        // When I click away, I can no longer edit the string, but I can now sort it
        $(".itinerary-item").on('focusout', () => {
            $("#itineraryItems").sortable({ cancel: "" })
        })
    }

    // Appends all the current list items into the createdItinerary array
    function updateCreatedItineraryArray() {
        createdItinerary = []
        var tmp = $("#itineraryItems").text().trim().split('\n')
        createdItinerary = trimmedArray(tmp)
        // Must replace any commas in the string to any other character
        // This is because when the final list is passed to the input, they will be appended by ',' but we don't want the actual string ',' to be associated with this
        // Must reverse this using .replace(";!;", ',') when reloading the page
        createdItinerary = createdItinerary.map(x => x.replace(",", ";!;"))
    }








    // TOUR LOCATION
    fetch()
    [{ "key": "apikey", "value": "GgjNvD9p8MA6c3emVYknlImLc5cAdj7X", "description": "" }]











    // Place all listeners inside this function
    $(window).on('load', () => {

        // All initialization functions here
        initializeDuration()
        initializeDays()

        $("#tourDuration").on('change', () => {
            console.log("DURATION CHANGE")
            // Reset the selectedTimeArray first, so it can contain the new duration ranges
            selectedTimeArray = []
            // Reset the timings to be displayed on the dropdown, following the new duration
            updateTiming()
            // Reset all the preselected time tags
            resetTimeTag()
        }
        )

        // Every time we click on a tour Timing, we want to add it to the internal array, as well as update the rendered time ranges. We also want to add the time range tag
        $("#tourTiming").on('change', () => {
            updateTimeRangeArray()
            updateTiming()
            addTimeTag()
        })


        // When a day is selected
        $("#tourDay").on('change', () => {
            // Append selected option to array
            updateSelectedDayArray()
            // Update the rendered days
            updateDays()
            // Add the day tag
            addDayTag()
        })


        // Tour Itinerary, Define function to run when the icon is clicked
        // When feather icon is clicked, add the current input to the list
        $("#add-itinerary-icon").on('click', () => {
            if ($("#itinerary-str").val().trim() != '') {
                addItineraryItem()
            } else {
                // Reset the input 
                $("#itinerary-str").val("")
            }
        })


        // Right before submitting, I want to run these stuff
        $("#createListingForm").on('submit', () => {
            $('input:hidden[name=finalTimings]').val(selectedTimeArray)
            $('input:hidden[name=finalDays]').val(selectedDayArray)

            updateCreatedItineraryArray()
            $('input:hidden[name=finalItinerary]').val(createdItinerary)

            // Remove whitespaces 
            $("input[name=tourTitle]").val($.trim($("input[name=tourTitle]").val()))
            $("textarea[name=tourDesc]").val($.trim($("textarea[name=tourDesc]").val()))

        })






        // If there is stored cookies (Means that there was an error and you re-render)
        if (getCookieValue("storedValues") != 'undefined') {
            var storedValues = JSON.parse(decodeURIComponent(getCookieValue("storedValues")))

            // Re-initialze the values
            console.log(storedValues)
            $("input[name=tourTitle]").val(storedValues.tourTitle)
            $("textarea[name=tourDesc]").val(storedValues.tourDesc)
            $("select[name=tourDuration]").val(storedValues.tourDuration)
            // Trigger the change function for the tourDuration so I can update the Tour Timings
            // If I simply use jQuery to set the value, the 'change' function won't trigger so I'll have to manually trigger it
            $("select[name=tourDuration]").trigger("change")


            var existingTimings = storedValues.finalTimings.split(',')
            if (existingTimings != '') {
                existingTimings.forEach((timing) => {
                    console.log(`Ran for time ${timing}`)
                    updateSpecificTimeRangeArray(timing)
                    updateTiming()
                    addSpecificTimeTag(timing)
                })
            } else {
                console.log("Time works correctly now")
            }


            console.log(selectedTimeArray)

            var existingDays = storedValues.finalDays.split(',')
            if (existingDays != '') {
                existingDays.forEach((day) => {
                    console.log(`Ran for day ${day}`)
                    updateSpecificSelectedDayArray(day)
                    updateDays()
                    addSpecificDayTag(day)
                })
            } else {
                console.log("Days works fine too")
            }


            var existingItinerary = storedValues.finalItinerary.split(',')
            if (existingItinerary != '') {
                existingItinerary.forEach((itinerary) => {
                    // Reverse the replace operation just now. Fill back the commas
                    itinerary = itinerary.replace(";!;", ',')
                    addSpecificItineraryItem(itinerary)
                    console.log(`Ran for Itinerary ${itinerary}`)
                })
            } else {
                console.log("Days works fine too")
            }

        }

    })
</script>